<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.AssassinG.ScsyERP.BasicInfo.core.dao.impl.ProductDaoImpl">

	<!-- 用户信息表 -->
	<sql id="t_product"> t_product </sql>

	<resultMap id="beanMap" type="ProductBean" extends="cn.AssassinG.ScsyERP.common.entity.BaseEntity.UnLoginableEntityMap">
		<result column="project" property="Project" />
		<result column="status" property="Status" typeHandler="cn.AssassinG.ScsyERP.BasicInfo.core.dao.MyBatisHandler.ProductStatusHandler" />
		<result column="packet_number" property="PacketNumber" />
		<result column="warehouse" property="Warehouse" />
		<result column="warehouse_location" property="WarehouseLocation" />
		<result column="in_storage_form" property="InStorageForm" />
		<result column="out_storage_form" property="OutStorageForm" />
		<result column="packet_type" property="PacketType" typeHandler="cn.AssassinG.ScsyERP.BasicInfo.core.dao.MyBatisHandler.PacketTypeHandler"/>
		<result column="width" property="Width" />
		<result column="length" property="Length" />
		<result column="height" property="Height" />
		<result column="weight" property="Weight" />
		<result column="volume" property="Volume" />
	</resultMap>

	<insert id="insert" parameterType="ProductBean" keyProperty="id" useGeneratedKeys="true">
		insert into <include refid="t_product"/> (corporation, create_time, update_time, delete_time, is_deleted, name, project, material, status, packet_number, warehouse, warehouse_location, in_storage_form, out_storage_form, packet_type, width, length, height, weight, volume)
		values (#{Corporation}, now(), now(), NULL , FALSE , #{Name}, #{Project}, #{Material}, #{Status,typeHandler=cn.AssassinG.ScsyERP.BasicInfo.core.dao.MyBatisHandler.ProductStatusHandler}, #{PacketNumber}, #{Warehouse}, #{WarehouseLocation}, #{InStorageForm}, #{OutStorageForm}, #{PacketType,typeHandler=cn.AssassinG.ScsyERP.BasicInfo.core.dao.MyBatisHandler.PacketTypeHandler}, #{Width}, #{Length}, #{Height}, #{Weight}, #{Volume})
	</insert>

	<insert id="batchInsert" parameterType="List" keyProperty="id" useGeneratedKeys="true">
		insert into <include refid="t_product"/> (corporation, create_time, update_time, delete_time, is_deleted, name, project, material, status, packet_number, warehouse, warehouse_location, in_storage_form, out_storage_form, packet_type, width, length, height, weight, volume)
		values
        <foreach collection="list" item="obj" separator=",">
            (#{obj.Corporation}, now(), now(), NULL, FALSE, #{obj.Name}, #{obj.Project}, #{obj.Material}, #{obj.Status,typeHandler=cn.AssassinG.ScsyERP.BasicInfo.core.dao.MyBatisHandler.ProductStatusHandler}, #{obj.PacketNumber}, #{obj.Warehouse}, #{obj.WarehouseLocation}, #{obj.InStorageForm}, #{obj.OutStorageForm}, #{obj.PacketType,typeHandler=cn.AssassinG.ScsyERP.BasicInfo.core.dao.MyBatisHandler.PacketTypeHandler}, #{obj.Width}, #{obj.Length}, #{obj.Height}, #{obj.Weight}, #{obj.Volume})
        </foreach>
	</insert>
	
	<update id="update" parameterType="ProductBean">
		update <include refid="t_product"/>
		<set>
			update_time = now(),
			name =  #{Name},
			material = #{Material},
			packet_number = #{PacketNumber},
			warehouse = #{Warehouse},
			warehouse_location = #{WarehouseLocation},
			in_storage_form = #{InStorageForm},
			out_storage_form = #{OutStorageForm},
			packet_type = #{PacketType,typeHandler=cn.AssassinG.ScsyERP.BasicInfo.core.dao.MyBatisHandler.PacketTypeHandler},
			width = #{Width},
			length = #{Length},
			height = #{Height},
			weight = #{Weight},
			volume = #{Volume}
		</set>
		<where>
			id = #{Id}
		</where>
	</update>

    <update id="batchUpdate" parameterType="List">
        update <include refid="t_product"/>
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="update_time =case" suffix="end,">
                <foreach collection="list" item="item">
                    when id=#{item.Id} then now()
                </foreach>
            </trim>
            <trim prefix="name =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.Name!=null">
                        when id=#{item.Id} then #{item.Name}
                    </if>
                </foreach>
            </trim>
			<trim prefix="material =case" suffix="end,">
				<foreach collection="list" item="item">
					<if test="item.Material!=null">
						when id=#{item.Id} then #{item.Material}
					</if>
				</foreach>
			</trim>
			<trim prefix="packet_number =case" suffix="end,">
				<foreach collection="list" item="item">
					<if test="item.PacketNumber!=null">
						when id=#{item.Id} then #{item.PacketNumber}
					</if>
				</foreach>
			</trim>
			<trim prefix="warehouse =case" suffix="end,">
				<foreach collection="list" item="item">
					<if test="item.Warehouse!=null">
						when id=#{item.Id} then #{item.Warehouse}
					</if>
				</foreach>
			</trim>
			<trim prefix="warehouse_location =case" suffix="end,">
				<foreach collection="list" item="item">
					<if test="item.WarehouseLocation!=null">
						when id=#{item.Id} then #{item.WarehouseLocation}
					</if>
				</foreach>
			</trim>
			<trim prefix="in_storage_form =case" suffix="end,">
				<foreach collection="list" item="item">
					<if test="item.InStorageForm!=null">
						when id=#{item.Id} then #{item.InStorageForm}
					</if>
				</foreach>
			</trim>
			<trim prefix="out_storage_form =case" suffix="end,">
				<foreach collection="list" item="item">
					<if test="item.OutStorageForm!=null">
						when id=#{item.Id} then #{item.OutStorageForm}
					</if>
				</foreach>
			</trim>
			<trim prefix="packet_type =case" suffix="end,">
				<foreach collection="list" item="item">
					<if test="item.PacketType!=null">
						when id=#{item.Id} then #{item.PacketType,typeHandler=cn.AssassinG.ScsyERP.BasicInfo.core.dao.MyBatisHandler.PacketTypeHandler}
					</if>
				</foreach>
			</trim>
			<trim prefix="width =case" suffix="end,">
				<foreach collection="list" item="item">
					<if test="item.Width!=null">
						when id=#{item.Id} then #{item.Width}
					</if>
				</foreach>
			</trim>
			<trim prefix="length =case" suffix="end,">
				<foreach collection="list" item="item">
					<if test="item.Length!=null">
						when id=#{item.Id} then #{item.Length}
					</if>
				</foreach>
			</trim>
			<trim prefix="height =case" suffix="end,">
				<foreach collection="list" item="item">
					<if test="item.Height!=null">
						when id=#{item.Id} then #{item.Height}
					</if>
				</foreach>
			</trim>
			<trim prefix="weight =case" suffix="end,">
				<foreach collection="list" item="item">
					<if test="item.Weight!=null">
						when id=#{item.Id} then #{item.Weight}
					</if>
				</foreach>
			</trim>
			<trim prefix="volume =case" suffix="end,">
				<foreach collection="list" item="item">
					<if test="item.Volume!=null">
						when id=#{item.Id} then #{item.Volume}
					</if>
				</foreach>
			</trim>
        </trim>
        <where>
            <foreach collection="list" separator="or" item="item">
                id=#{item.Id}
            </foreach>
        </where>
    </update>

    <update id="delete" parameterType="ProductBean">
        update <include refid="t_product"/>
        <set>
            delete_time = now(),
			update_time = now(),
            is_deleted =  true
        </set>
        <where>
            id = #{Id}
        </where>
    </update>

	<update id="deleteById" parameterType="long">
		update <include refid="t_product"/>
		<set>
			delete_time = now(),
			update_time = now(),
			is_deleted =  true
		</set>
		<where>
			id = #{Id}
		</where>
	</update>
	
  	<select id="getById" parameterType="long" resultMap="beanMap">
    	select * from <include refid="t_product"/> where id = #{Id}
  	</select>
  	
  	<select id="listAll" resultMap="beanMap">
    	select * from <include refid="t_product"/> order by id asc
  	</select>

	<sql id="condition_sql">
		<!-- Equal query -->
		<if test="Id != null"> and id = #{Id}</if>
		<if test="Corporation != null"> and corporation = #{Corporation}</if>
		<if test="createTimeBegin != null"> and create_time &gt;= #{createTimeBegin}</if>
		<if test="createTimeEnd != null"> and create_time &lt;= #{createTimeEnd}</if>
		<if test="updateTimeBegin != null"> and update_time &gt;= #{updateTimeBegin}</if>
		<if test="updateTimeEnd != null"> and update_time &lt;= #{updateTimeEnd}</if>
		<if test="deleteTimeBegin != null"> and delete_time &gt;= #{deleteTimeBegin}</if>
		<if test="deleteTimeEnd != null"> and delete_time &lt;= #{deleteTimeEnd}</if>
		<if test="IfDeleted != null"> and is_deleted = #{IfDeleted}</if>
		<if test="Project != null"> and project = #{Project}</if>
		<if test="Material != null"> and material = #{Material}</if>
		<if test="Status != null"> and status = #{Status}</if>
		<if test="PacketNumber != null"> and packet_number = #{PacketNumber}</if>
		<if test="Warehouse != null"> and warehouse = #{Warehouse}</if>
		<if test="WarehouseLocation != null"> and warehouse_location = #{WarehouseLocation}</if>
		<if test="InStorageForm != null"> and in_storage_form = #{InStorageForm}</if>
		<if test="OutStorageForm != null"> and out_storage_form = #{OutStorageForm}</if>
		<if test="PacketType != null"> and packet_type = #{PacketType.PacketType,typeHandler=cn.AssassinG.ScsyERP.BasicInfo.core.dao.MyBatisHandler.PacketTypeHandler}</if>
		<!-- Like query -->
		<if test="Name != null and Name != ''"> and name like CONCAT(CONCAT('%', #{Name}), '%')</if>
	</sql>

	<select id="listBy" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="t_product"/>
		<where>
			<include refid="condition_sql" />
		</where>
		<![CDATA[ order by id asc]]>
	</select>

	<select id="listPage" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="t_product"/>
		<where>
			<include refid="condition_sql" />
		</where>
		<![CDATA[ order by id asc]]>
	</select>

	<select id="listPageCount" parameterType="java.util.Map" resultType="long">
		select count(1) from <include refid="t_product"/>
		<where>
			<include refid="condition_sql"/>
		</where>
	</select>
	
</mapper>