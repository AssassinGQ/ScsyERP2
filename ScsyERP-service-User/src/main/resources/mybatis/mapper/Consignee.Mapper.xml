<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.AssassinG.ScsyERP.User.core.dao.impl.ConsigneeDaoImpl">

	<!-- 用户信息表 -->
	<sql id="t_consignee"> t_consignee </sql>

	<resultMap id="beanMap" type="ConsigneeBean" extends="cn.AssassinG.ScsyERP.common.entity.BaseEntity.LoginableEntityMap">
		<result column="address" property="Address" />
		<result column="man_name" property="ManName" />
	</resultMap>

	<insert id="insert" parameterType="ConsigneeBean" keyProperty="id" useGeneratedKeys="true">
		insert into <include refid="t_consignee"/> (corporation, create_time, update_time, delete_time, is_deleted, name, address, man_name)
		values (#{Corporation}, now(), now(), NULL , FALSE , #{Name}, #{Address}, #{ManName})
	</insert>

	<insert id="batchInsert" parameterType="List" keyProperty="id" useGeneratedKeys="true">
		insert into <include refid="t_consignee"/> (corporation, create_time, update_time, delete_time, is_deleted, name, address, man_name)
		values
        <foreach collection="list" item="obj" separator=",">
            (#{obj.Corporation}, now(), now(), NULL, FALSE, #{obj.Name}, #{obj.Address}, #{obj.ManName})
        </foreach>
	</insert>
	
	<update id="update" parameterType="ConsigneeBean">
		update <include refid="t_consignee"/>
		<set>
			update_time = now(),
			name =  #{Name},
			address = #{Address},
			man_name = #{ManName}
		</set>
		<where>
			id = #{Id}
		</where>
	</update>

    <update id="batchUpdate" parameterType="List">
        update <include refid="t_consignee"/>
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="update_time =case" suffix="end,">
                <foreach collection="list" item="item">
                    when id=#{item.Id} then now()
                </foreach>
            </trim>
            <trim prefix="name =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.Name!=null">
                        when id=#{item.Id} then #{item.Name}
                    </if>
                </foreach>
            </trim>
			<trim prefix="address =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.Address!=null">
                        when id=#{item.Id} then #{item.Address}
                    </if>
                </foreach>
            </trim>
			<trim prefix="man_name =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.ManName!=null">
                        when id=#{item.Id} then #{item.ManName}
                    </if>
                </foreach>
            </trim>
        </trim>
        <where>
            <foreach collection="list" separator="or" item="item">
                id=#{item.Id}
            </foreach>
        </where>
    </update>

    <update id="delete" parameterType="ConsigneeBean">
        update <include refid="t_consignee"/>
        <set>
            delete_time = now(),
			update_time = now(),
            is_deleted =  true
        </set>
        <where>
            id = #{Id}
        </where>
    </update>

	<update id="deleteById" parameterType="long">
		update <include refid="t_consignee"/>
		<set>
			delete_time = now(),
			update_time = now(),
			is_deleted =  true
		</set>
		<where>
			id = #{Id}
		</where>
	</update>
	
  	<select id="getById" parameterType="long" resultMap="beanMap">
    	select * from <include refid="t_consignee"/> where id = #{Id}
  	</select>
  	
  	<select id="listAll" resultMap="beanMap">
    	select * from <include refid="t_consignee"/> order by id asc
  	</select>

	<sql id="condition_sql">
		<!-- Equal query -->
		<if test="Id != null"> and id = #{Id}</if>
		<if test="Corporation != null"> and corporation = #{Corporation}</if>
		<if test="createTimeBegin != null"> and create_time &gt;= #{createTimeBegin}</if>
		<if test="createTimeEnd != null"> and create_time &lt;= #{createTimeEnd}</if>
		<if test="updateTimeBegin != null"> and update_time &gt;= #{updateTimeBegin}</if>
		<if test="updateTimeEnd != null"> and update_time &lt;= #{updateTimeEnd}</if>
		<if test="deleteTimeBegin != null"> and delete_time &gt;= #{deleteTimeBegin}</if>
		<if test="deleteTimeEnd != null"> and delete_time &lt;= #{deleteTimeEnd}</if>
		<if test="IfDeleted != null"> and is_deleted = #{IfDeleted}</if>
		<!-- Like query -->
		<if test="Name != null and Name != ''"> and name like CONCAT(CONCAT('%', #{Name}), '%')</if>
		<if test="Address != null and Address != ''"> and address like CONCAT(CONCAT('%', #{Address}), '%')</if>
		<if test="ManName != null and ManName != ''"> and man_name like CONCAT(CONCAT('%', #{ManName}), '%')</if>
	</sql>

	<select id="listBy" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="t_consignee"/>
		<where>
			<include refid="condition_sql" />
		</where>
		<![CDATA[ order by id asc]]>
	</select>

	<select id="listPage" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="t_consignee"/>
		<where>
			<include refid="condition_sql" />
		</where>
		<![CDATA[ order by id asc]]>
	</select>

	<select id="listPageCount" parameterType="java.util.Map" resultType="long">
		select count(1) from <include refid="t_consignee"/>
		<where>
			<include refid="condition_sql"/>
		</where>
	</select>
	
</mapper>